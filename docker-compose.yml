version: '3.8'

services:
  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: scrape-stream-backend
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html
      - ./backend/storage/logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=local
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=scrape_stream
      - DB_USERNAME=scrape_user
      - DB_PASSWORD=scrape_password
      - PROXY_MANAGER_URL=http://proxy-manager:8080
    depends_on:
      - db
    networks:
      - scrape-network

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: scrape-stream-frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - scrape-network

  # Golang Proxy Manager
  proxy-manager:
    build:
      context: ./proxy-manager
      dockerfile: Dockerfile
    container_name: scrape-stream-proxy-manager
    restart: unless-stopped
    environment:
      - PORT=8080
      - PROXY_FILE=/app/proxies.txt
    networks:
      - scrape-network

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: scrape-stream-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
      - frontend
    networks:
      - scrape-network

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: scrape-stream-db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=scrape_stream
      - MYSQL_USER=scrape_user
      - MYSQL_PASSWORD=scrape_password
      - MYSQL_ROOT_PASSWORD=root_password
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - scrape-network

networks:
  scrape-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
